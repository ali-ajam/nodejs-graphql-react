[{"/Users/aliajam/projects/Media/Youtube/GraphQL/appengine-graphql-react/src/index.js":"1","/Users/aliajam/projects/Media/Youtube/GraphQL/appengine-graphql-react/src/layouts/Admin.js":"2","/Users/aliajam/projects/Media/Youtube/GraphQL/appengine-graphql-react/src/components/Footers/Footer.js":"3","/Users/aliajam/projects/Media/Youtube/GraphQL/appengine-graphql-react/src/pages/Google.js":"4","/Users/aliajam/projects/Media/Youtube/GraphQL/appengine-graphql-react/src/components/Headers/Header.js":"5"},{"size":1083,"mtime":1609994077283,"results":"6","hashOfConfig":"7"},{"size":453,"mtime":1609993047709,"results":"8","hashOfConfig":"7"},{"size":872,"mtime":1609993428169,"results":"9","hashOfConfig":"7"},{"size":3648,"mtime":1609994459177,"results":"10","hashOfConfig":"7"},{"size":5577,"mtime":1609993706328,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14","usedDeprecatedRules":"15"},"18x5inc",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"15"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"15"},"/Users/aliajam/projects/Media/Youtube/GraphQL/appengine-graphql-react/src/index.js",["26"],"import React from 'react';\nimport ReactDOM from 'react-dom';\n// react library for routing\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\n// core styles\nimport 'assets/scss/styles.scss';\nimport AdminLayout from 'layouts/Admin.js';\nimport {\n  ApolloClient,\n  ApolloProvider,\n  InMemoryCache,\n  HttpLink,\n  from,\n} from '@apollo/client';\nimport { onError } from '@apollo/client/link/error';\n\nconst errorLink = onError(({ graphqlErrors, networkError }) => {\n  if (graphqlErrors) {\n    graphqlErrors.map(({ message, location, path }) => {\n      alert(`GraphQL Error ${message}`);\n    });\n  }\n});\nconst link = from([\n  errorLink,\n  new HttpLink({ uri: 'http://localhost:8080/graphql' }),\n]);\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: link,\n});\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <ApolloProvider client={client}>\n        <Switch>\n          <Route path='/' render={() => <AdminLayout />} />\n        </Switch>\n      </ApolloProvider>\n    </BrowserRouter>\n  );\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n",["27","28"],"/Users/aliajam/projects/Media/Youtube/GraphQL/appengine-graphql-react/src/layouts/Admin.js",[],"/Users/aliajam/projects/Media/Youtube/GraphQL/appengine-graphql-react/src/components/Footers/Footer.js",["29"],"import React from 'react';\n\n// reactstrap components\nimport { Container, Row, Col } from 'reactstrap';\n\nconst Footer = () => {\n  return (\n    <>\n      <Container fluid>\n        <footer style={footer} className='pt-0'>\n          <Row className='align-items-center justify-content-lg-between'>\n            <Col lg='6'>\n              <div className='copyright text-center text-lg-left text-muted'>\n                Â© {new Date().getFullYear()}{' '}\n                <a\n                  className='font-weight-bold ml-1'\n                  href='https://github.com/ali-ajam/gm'\n                  target='_blank'\n                >\n                  Ali Ajam\n                </a>\n              </div>\n            </Col>\n          </Row>\n        </footer>\n      </Container>\n    </>\n  );\n};\n\nconst footer = {\n  background: 'white',\n  padding: '30px 0',\n};\n\nexport default Footer;\n","/Users/aliajam/projects/Media/Youtube/GraphQL/appengine-graphql-react/src/pages/Google.js",["30","31","32"],"/Users/aliajam/projects/Media/Youtube/GraphQL/appengine-graphql-react/src/components/Headers/Header.js",["33"],"import React, { Fragment, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { gql, useQuery } from '@apollo/client';\n// reactstrap components\nimport { Card, CardBody, CardTitle, Container, Row, Col } from 'reactstrap';\n\nconst getAnalyticts = gql`\n  {\n    analytics {\n      totalVehicles\n      newVehicles\n      newVehicles\n      avgCharge\n    }\n  }\n`;\n\nconst Header = () => {\n  const [analytics, setAnalytics] = useState({\n    avgCharge: 0,\n    newVehicles: 0,\n    outOfNetwork: 0,\n    totalVehicles: 0,\n  });\n  const { error, loading, data } = useQuery(getAnalyticts);\n  useEffect(() => {\n    axios\n      .get(`https://gm-test-f49ce.uc.r.appspot.com/analytics`)\n      .then((res) => {\n        console.log(res);\n        setAnalytics(res.data['USA']);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    console.log(analytics, error, loading, data);\n  }, []);\n\n  return (\n    <Fragment>\n      <div style={header}>\n        <Container fluid>\n          <div style={headerBody}>\n            <Row>\n              <Col md='6' xl='3'>\n                <Card style={card}>\n                  <CardBody>\n                    <Row>\n                      <div className='col'>\n                        <CardTitle\n                          tag='h6'\n                          className='text-uppercase text-muted mb-0'\n                        >\n                          Total electric vehicles\n                        </CardTitle>\n                        <span className='h3 font-weight-bold mb-0'>\n                          {analytics.totalVehicles}\n                        </span>\n                      </div>\n                    </Row>\n                    <p className='mt-3 mb-0 text-sm'>\n                      <span className='text-success mr-2'>1.48%</span>\n                      <span className='text-nowrap'>Since last month</span>\n                    </p>\n                  </CardBody>\n                </Card>\n              </Col>\n              <Col md='6' xl='3'>\n                <Card style={card}>\n                  <CardBody>\n                    <Row>\n                      <div className='col'>\n                        <CardTitle\n                          tag='h6'\n                          className='text-uppercase text-muted mb-0'\n                        >\n                          New electric vehicles\n                        </CardTitle>\n                        <span className='h3 font-weight-bold mb-0'>\n                          {analytics.newVehicles}\n                        </span>\n                      </div>\n                    </Row>\n                    <p className='mt-3 mb-0 text-sm'>\n                      <span className='text-success mr-2'>3.48%</span>\n                      <span className='text-nowrap'>Since last month</span>\n                    </p>\n                  </CardBody>\n                </Card>\n              </Col>\n              <Col md='6' xl='3'>\n                <Card style={card}>\n                  <CardBody>\n                    <Row>\n                      <div className='col'>\n                        <CardTitle\n                          tag='h6'\n                          className='text-uppercase text-muted mb-0'\n                        >\n                          Average charge level\n                        </CardTitle>\n                        <span className='h3 font-weight-bold mb-0'>\n                          {analytics.avgCharge}\n                        </span>\n                      </div>\n                    </Row>\n                    <p className='mt-3 mb-0 text-sm'>\n                      <span className='text-warning mr-2'>5%</span>\n                      <span className='text-nowrap'>below the limit</span>\n                    </p>\n                  </CardBody>\n                </Card>\n              </Col>\n              <Col md='6' xl='3'>\n                <Card style={card}>\n                  <CardBody>\n                    <Row>\n                      <div className='col'>\n                        <CardTitle\n                          tag='h6'\n                          className='text-uppercase text-muted mb-0'\n                        >\n                          Out of Network\n                        </CardTitle>\n                        <span className='h3 font-weight-bold mb-0'>\n                          {analytics.outOfNetwork}\n                        </span>\n                      </div>\n                    </Row>\n                    <p className='mt-3 mb-0 text-sm'>\n                      <span className='text-danger mr-2'>7%</span>\n                      <span className='text-nowrap'>Since last month</span>\n                    </p>\n                  </CardBody>\n                </Card>\n              </Col>\n            </Row>\n          </div>\n        </Container>\n      </div>\n    </Fragment>\n  );\n};\n\nconst header = {\n  backgroundColor: '#11cdef',\n  paddingBottom: '4.5rem',\n  paddingTop: '4.5rem',\n  position: 'relative',\n};\n\nconst headerBody = {\n  fontFamily: 'Open Sans, sans-serif',\n  fontSize: '1rem',\n  fontWeight: '400',\n  lineHeight: '1.5',\n  color: 'rgb(82, 95, 127)',\n  textAlign: 'left',\n};\n\nconst card = {\n  marginBottom: '30px',\n  boxShadow: '0 0 2rem 0 rgba(136, 152, 170, 0.15)',\n  border: '0',\n  fontFamily: 'Open Sans, sans-serif',\n  fontSize: '1rem',\n  fontWeight: '400',\n  lineHeight: '1.5',\n  color: 'rgb(82, 95, 127)',\n  textAlign: 'left',\n  position: 'relative',\n  display: 'flex',\n  flexDirection: 'column',\n  minWidth: '0',\n  backgroundColor: '#fff',\n  backgroundClip: 'borderBox',\n  borderRadius: '0.5rem',\n};\n\nexport default Header;\n",{"ruleId":"34","severity":1,"message":"35","line":20,"column":53,"nodeType":"36","messageId":"37","endLine":20,"endColumn":55},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":15,"column":17,"nodeType":"44","endLine":19,"endColumn":18},{"ruleId":"45","severity":1,"message":"46","line":56,"column":13,"nodeType":"44","endLine":59,"endColumn":15},{"ruleId":"47","severity":1,"message":"48","line":92,"column":6,"nodeType":"49","endLine":92,"endColumn":10},{"ruleId":"47","severity":1,"message":"50","line":92,"column":6,"nodeType":"49","endLine":92,"endColumn":10,"suggestions":"51"},{"ruleId":"47","severity":1,"message":"52","line":37,"column":6,"nodeType":"53","endLine":37,"endColumn":8,"suggestions":"54"},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-native-reassign",["55"],"no-negated-in-lhs",["56"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react-hooks/exhaustive-deps","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","Identifier","React Hook useEffect has missing dependencies: 'cars', 'data', 'error', and 'loading'. Either include them or remove the dependency array.",["57"],"React Hook useEffect has missing dependencies: 'analytics', 'data', 'error', and 'loading'. Either include them or remove the dependency array.","ArrayExpression",["58"],"no-global-assign","no-unsafe-negation",{"desc":"59","fix":"60"},{"desc":"61","fix":"62"},"Update the dependencies array to be: [cars, data, error, loading]",{"range":"63","text":"64"},"Update the dependencies array to be: [analytics, data, error, loading]",{"range":"65","text":"66"},[2470,2474],"[cars, data, error, loading]",[895,897],"[analytics, data, error, loading]"]